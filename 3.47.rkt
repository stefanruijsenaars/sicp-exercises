#lang sicp

(define (make-semaphore size)
  (let ((lock (make-mutex))
        (busy 0))
    (define (the-semaphore m)
      (cond ((eq? m 'acquire)
             (lock 'acquire)
             (if (< busy size)
                 (begin (set! busy (+ busy 1))
                        (lock 'release))
                 (begin (lock 'release)
                        (the-semaphore 'acquire))))
            ((eq? m 'release)
             (lock 'acquire)
             (set! busy (- busy 1))
             (lock 'release))
            (else (error "Unknown request " m))))
    the-semaphore))

(define (make-semaphore-with-test-and-set size)
  (let ((lock (list false))
        (busy 0))
    (define (the-semaphore m)
      (cond ((eq? m 'acquire)
             (if (test-and-set! lock)
                 (the-semaphore 'acquire))
             (if (< busy size)
                 (begin (set! busy (+ busy 1))
                        (clear! lock))
                 (begin (clear! lock)
                        (if (test-and-set! lock)
                            (the-semaphore 'acquire)))))
            ((eq? m 'release)
             (acquire-lock)
             (set! busy (- busy 1))
             (clear! lock))
            (else (error "Unknown request " m))))
    the-semaphore))